# -*- coding: utf-8 -*-
"""Disease Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NR2stbbpmJLhCU_JCvo6yQcSwadoFfnX
"""

import pandas as pd
import numpy as np
import matplotlib as plt
import seaborn as sns

disease=pd.read_csv('https://github.com/ybifoundation/Dataset/raw/main/MultipleDiseasePrediction.csv')

disease.head()

disease.tail()

disease.info(verbose=True,show_counts=True)

disease.describe()

disease.isna().sum()

disease.nunique()

disease.corr()

#sns.pairplot(disease)
disease.columns

y=disease['prognosis']
X = disease.drop(['prognosis'], axis = 1)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=.30, random_state=2529)

X_train.shape, X_test.shape, y_train.shape, y_test.shape

# Import necessary libraries
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Assuming X_train, X_test, y_train, y_test are already defined

# Create an instance of RandomForestClassifier
model = RandomForestClassifier()

# Fit the model to the training data
model.fit(X_train, y_train)

# Make predictions on the testing data
y_pred = model.predict(X_test)

# Calculate accuracy
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# Generate and display confusion matrix
cm = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:\n", cm)

# Generate and display classification report
report = classification_report(y_test, y_pred)
print("Classification Report:\n", report)